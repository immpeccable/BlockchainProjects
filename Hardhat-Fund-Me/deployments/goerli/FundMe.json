{
  "address": "0xa692a9D54d617936C549c933B9E88f70059c51bd",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funderAddress",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "funderIndex",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x680684e2b6ce3acbb1aed59680923a39e96b9f0420e5e8f2c8522999a5f8ea2c",
  "receipt": {
    "to": null,
    "from": "0x2f661A868706954E4F193bAbE6C4D798AaAb2d30",
    "contractAddress": "0xa692a9D54d617936C549c933B9E88f70059c51bd",
    "transactionIndex": 62,
    "gasUsed": "991723",
    "logsBloom": "0x
    "blockHash": "0x9e9c7ce0ec74208df8c4ccebfe974cf804ed8c56eb3c21bb20636f7629ff08d5",
    "transactionHash": "0x680684e2b6ce3acbb1aed59680923a39e96b9f0420e5e8f2c8522999a5f8ea2c",
    "logs": [],
    "blockNumber": 8372708,
    "cumulativeGasUsed": "10007375",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
  ],
  "numDeployments": 3,
  "solcInputHash": "9efc41484fa74d60ccb09fe5eb747f50",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funderAddress\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"funderIndex\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"./PriceConverter.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n\\nerror FundMe__NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) private addressToAmountFunded;\\n    address[] private funders;\\n\\n    address private immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n    \\n    AggregatorV3Interface private priceFeed;\\n\\n    modifier onlyOwner {\\n        \\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n    }\\n    \\n   \\n    \\n    function withdraw() public onlyOwner {\\n        for (uint256 funderIndex=0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public onlyOwner {\\n        address [] memory t_Funders = funders;\\n        uint256 n = funders.length;\\n        for(uint256 i = 0; i<n; i++){\\n            address funder = t_Funders[i];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n\\n    }\\n    function getOwner() public view returns(address){\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 funderIndex) public view returns(address){\\n        return funders[funderIndex];\\n    }\\n\\n    function getAddressToAmountFunded(address funderAddress) public view returns(uint256){\\n        return addressToAmountFunded[funderAddress]; \\n    }\\n\\n    function getPriceFeed() public view returns(AggregatorV3Interface){\\n        return priceFeed;\\n    }\\n}\",\"keccak256\":\"0xdde17e58decdf85d5bf58d090679c1ac48c648347d71b9f0180e181e98acb0a9\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        // Goerli ETH / USD Address\\n        // https://docs.chain.link/docs/ethereum-addresses/\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n        //     0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n        // );\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n        // or (Both will do the same thing)\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\",\"keccak256\":\"0x30e9fa8170b0cad39115ec3c2d440c76bc8432b4b0bec48528d4fdabc9387d21\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620012113803806200121183398181016040528101906200003791906200011d565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200014f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e582620000b8565b9050919050565b620000f781620000d8565b81146200010357600080fd5b50565b6000815190506200011781620000ec565b92915050565b600060208284031215620001365762000135620000b3565b5b6000620001468482850162000106565b91505092915050565b608051611091620001806000396000818161034f0152818161059e015281816105ee01526107ed01526110916000f3fe60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610142578063b60d42881461016d578063be2693f014610177578063d7b4750c1461018e5761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100ec578063893d20e8146101175761008e565b3661008e5761008c6101cb565b005b6100966101cb565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610aa3565b610305565b6040516100cc9190610ae9565b60405180910390f35b3480156100e157600080fd5b506100ea61034d565b005b3480156100f857600080fd5b5061010161058d565b60405161010e9190610ae9565b60405180910390f35b34801561012357600080fd5b5061012c61059a565b6040516101399190610b13565b60405180910390f35b34801561014e57600080fd5b506101576105c2565b6040516101649190610b8d565b60405180910390f35b6101756101cb565b005b34801561018357600080fd5b5061018c6105ec565b005b34801561019a57600080fd5b506101b560048036038101906101b09190610bd4565b610884565b6040516101c29190610b13565b60405180910390f35b6802b5e3af16b188000061020a600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108cc90919063ffffffff16565b101561024b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024290610c5e565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102999190610cad565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103d2576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561047d576000600182815481106103f8576103f7610ce1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061047590610d10565b9150506103d5565b50600067ffffffffffffffff81111561049957610498610d58565b5b6040519080825280602002602001820160405280156104c75781602001602082028036833780820191505090505b50600190805190602001906104dd929190610999565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161050490610db8565b60006040518083038185875af1925050503d8060008114610541576040519150601f19603f3d011682016040523d82523d6000602084013e610546565b606091505b505090508061058a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058190610e19565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610671576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106f557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106ab575b505050505090506000600180549050905060005b8181101561078857600083828151811061072657610725610ce1565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061078090610d10565b915050610709565b50600067ffffffffffffffff8111156107a4576107a3610d58565b5b6040519080825280602002602001820160405280156107d25781602001602082028036833780820191505090505b50600190805190602001906107e8929190610999565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161082f90610db8565b60006040518083038185875af1925050503d806000811461086c576040519150601f19603f3d011682016040523d82523d6000602084013e610871565b606091505b505090508061087f57600080fd5b505050565b60006001828154811061089a57610899610ce1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108d883610908565b90506000670de0b6b3a764000085836108f19190610e39565b6108fb9190610eaa565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610956573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097a9190610f68565b5050509150506402540be400816109919190610fe3565b915050919050565b828054828255906000526020600020908101928215610a12579160200282015b82811115610a115782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109b9565b5b509050610a1f9190610a23565b5090565b5b80821115610a3c576000816000905550600101610a24565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a7082610a45565b9050919050565b610a8081610a65565b8114610a8b57600080fd5b50565b600081359050610a9d81610a77565b92915050565b600060208284031215610ab957610ab8610a40565b5b6000610ac784828501610a8e565b91505092915050565b6000819050919050565b610ae381610ad0565b82525050565b6000602082019050610afe6000830184610ada565b92915050565b610b0d81610a65565b82525050565b6000602082019050610b286000830184610b04565b92915050565b6000819050919050565b6000610b53610b4e610b4984610a45565b610b2e565b610a45565b9050919050565b6000610b6582610b38565b9050919050565b6000610b7782610b5a565b9050919050565b610b8781610b6c565b82525050565b6000602082019050610ba26000830184610b7e565b92915050565b610bb181610ad0565b8114610bbc57600080fd5b50565b600081359050610bce81610ba8565b92915050565b600060208284031215610bea57610be9610a40565b5b6000610bf884828501610bbf565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c48601b83610c01565b9150610c5382610c12565b602082019050919050565b60006020820190508181036000830152610c7781610c3b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cb882610ad0565b9150610cc383610ad0565b9250828201905080821115610cdb57610cda610c7e565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d1b82610ad0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610d4d57610d4c610c7e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610da2600083610d87565b9150610dad82610d92565b600082019050919050565b6000610dc382610d95565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e03600b83610c01565b9150610e0e82610dcd565b602082019050919050565b60006020820190508181036000830152610e3281610df6565b9050919050565b6000610e4482610ad0565b9150610e4f83610ad0565b9250828202610e5d81610ad0565b91508282048414831517610e7457610e73610c7e565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610eb582610ad0565b9150610ec083610ad0565b925082610ed057610ecf610e7b565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610efa81610edb565b8114610f0557600080fd5b50565b600081519050610f1781610ef1565b92915050565b6000819050919050565b610f3081610f1d565b8114610f3b57600080fd5b50565b600081519050610f4d81610f27565b92915050565b600081519050610f6281610ba8565b92915050565b600080600080600060a08688031215610f8457610f83610a40565b5b6000610f9288828901610f08565b9550506020610fa388828901610f3e565b9450506040610fb488828901610f53565b9350506060610fc588828901610f53565b9250506080610fd688828901610f08565b9150509295509295909350565b6000610fee82610f1d565b9150610ff983610f1d565b925082820261100781610f1d565b91507f8000000000000000000000000000000000000000000000000000000000000000841460008412161561103f5761103e610c7e565b5b828205841483151761105457611053610c7e565b5b509291505056fea264697066735822122038da5480a5cbe67377164664ce6f2b91c3bf0950116b94a84206d9ce27d42b5064736f6c63430008110033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610142578063b60d42881461016d578063be2693f014610177578063d7b4750c1461018e5761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100ec578063893d20e8146101175761008e565b3661008e5761008c6101cb565b005b6100966101cb565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610aa3565b610305565b6040516100cc9190610ae9565b60405180910390f35b3480156100e157600080fd5b506100ea61034d565b005b3480156100f857600080fd5b5061010161058d565b60405161010e9190610ae9565b60405180910390f35b34801561012357600080fd5b5061012c61059a565b6040516101399190610b13565b60405180910390f35b34801561014e57600080fd5b506101576105c2565b6040516101649190610b8d565b60405180910390f35b6101756101cb565b005b34801561018357600080fd5b5061018c6105ec565b005b34801561019a57600080fd5b506101b560048036038101906101b09190610bd4565b610884565b6040516101c29190610b13565b60405180910390f35b6802b5e3af16b188000061020a600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108cc90919063ffffffff16565b101561024b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024290610c5e565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102999190610cad565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103d2576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561047d576000600182815481106103f8576103f7610ce1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061047590610d10565b9150506103d5565b50600067ffffffffffffffff81111561049957610498610d58565b5b6040519080825280602002602001820160405280156104c75781602001602082028036833780820191505090505b50600190805190602001906104dd929190610999565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161050490610db8565b60006040518083038185875af1925050503d8060008114610541576040519150601f19603f3d011682016040523d82523d6000602084013e610546565b606091505b505090508061058a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058190610e19565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610671576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106f557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106ab575b505050505090506000600180549050905060005b8181101561078857600083828151811061072657610725610ce1565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061078090610d10565b915050610709565b50600067ffffffffffffffff8111156107a4576107a3610d58565b5b6040519080825280602002602001820160405280156107d25781602001602082028036833780820191505090505b50600190805190602001906107e8929190610999565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161082f90610db8565b60006040518083038185875af1925050503d806000811461086c576040519150601f19603f3d011682016040523d82523d6000602084013e610871565b606091505b505090508061087f57600080fd5b505050565b60006001828154811061089a57610899610ce1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108d883610908565b90506000670de0b6b3a764000085836108f19190610e39565b6108fb9190610eaa565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610956573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097a9190610f68565b5050509150506402540be400816109919190610fe3565b915050919050565b828054828255906000526020600020908101928215610a12579160200282015b82811115610a115782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109b9565b5b509050610a1f9190610a23565b5090565b5b80821115610a3c576000816000905550600101610a24565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a7082610a45565b9050919050565b610a8081610a65565b8114610a8b57600080fd5b50565b600081359050610a9d81610a77565b92915050565b600060208284031215610ab957610ab8610a40565b5b6000610ac784828501610a8e565b91505092915050565b6000819050919050565b610ae381610ad0565b82525050565b6000602082019050610afe6000830184610ada565b92915050565b610b0d81610a65565b82525050565b6000602082019050610b286000830184610b04565b92915050565b6000819050919050565b6000610b53610b4e610b4984610a45565b610b2e565b610a45565b9050919050565b6000610b6582610b38565b9050919050565b6000610b7782610b5a565b9050919050565b610b8781610b6c565b82525050565b6000602082019050610ba26000830184610b7e565b92915050565b610bb181610ad0565b8114610bbc57600080fd5b50565b600081359050610bce81610ba8565b92915050565b600060208284031215610bea57610be9610a40565b5b6000610bf884828501610bbf565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c48601b83610c01565b9150610c5382610c12565b602082019050919050565b60006020820190508181036000830152610c7781610c3b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cb882610ad0565b9150610cc383610ad0565b9250828201905080821115610cdb57610cda610c7e565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d1b82610ad0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610d4d57610d4c610c7e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610da2600083610d87565b9150610dad82610d92565b600082019050919050565b6000610dc382610d95565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e03600b83610c01565b9150610e0e82610dcd565b602082019050919050565b60006020820190508181036000830152610e3281610df6565b9050919050565b6000610e4482610ad0565b9150610e4f83610ad0565b9250828202610e5d81610ad0565b91508282048414831517610e7457610e73610c7e565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610eb582610ad0565b9150610ec083610ad0565b925082610ed057610ecf610e7b565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610efa81610edb565b8114610f0557600080fd5b50565b600081519050610f1781610ef1565b92915050565b6000819050919050565b610f3081610f1d565b8114610f3b57600080fd5b50565b600081519050610f4d81610f27565b92915050565b600081519050610f6281610ba8565b92915050565b600080600080600060a08688031215610f8457610f83610a40565b5b6000610f9288828901610f08565b9550506020610fa388828901610f3e565b9450506040610fb488828901610f53565b9350506060610fc588828901610f53565b9250506080610fd688828901610f08565b9150509295509295909350565b6000610fee82610f1d565b9150610ff983610f1d565b925082820261100781610f1d565b91507f8000000000000000000000000000000000000000000000000000000000000000841460008412161561103f5761103e610c7e565b5b828205841483151761105457611053610c7e565b5b509291505056fea264697066735822122038da5480a5cbe67377164664ce6f2b91c3bf0950116b94a84206d9ce27d42b5064736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}